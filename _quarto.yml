project:
  type: website
  resources:
    - images/**
    - projects/*.pdf

website:
  title: "Yiwei Lu"
  search:
    location: navbar        
    type: overlay

  navbar:
    logo: images/logo1.png
    left:
      - href: index.qmd
        text: '<span class="nav-text">Home</span>'
      - text: '<span class="nav-text">Projects</span>'
        menu:
          - href: projects/index.qmd
            text: '<span class="nav-text">Projects</span>'
          - href: projects/Capstone.qmd
            text: '<span class="nav-text">Capstone Project</span>'
      - text: '<span class="nav-text">Startup</span>'
        menu:
          - text: '<span style="font-size: 0.7rem; font-weight: 300; color: gray;">BETA LAUNCH</span>'
          - href: https://forecastai-poc.netlify.app/
            text: '<strong>Klug Forecast AI</strong>'
            target: _blank
          - text: '<span style="font-size: 0.7rem; font-weight: 300; color: gray;">CONCEPT STAGE</span>'
          - href: https://platemateofficial.netlify.app/
            text: '<strong>Platemate</strong>'
            target: _blank
          - href: https://skillforgeofficial.netlify.app/
            text: '<strong>Skill Forge</strong>'
            target: _blank
          - text: '<hr style="border: none; border-top: 1px solid #ccc; margin: 0.8em 0;">'
          - text: '<span style="font-size: 0.7rem; font-weight: 300; color: gray;">ABOUT</span>'
          - href: startup/journey.qmd
            text: '<strong>Startup Journey</strong>'
            target: _self
      - href: about.qmd
        text: '<span class="nav-text">About</span>'

    right:
      - icon: linkedin
        href: https://www.linkedin.com/in/yiwei-lu78
        aria-label: LinkedIn
      - icon: github
        href: https://github.com/lywww88
        aria-label: GitHub
      - icon: database
        href: https://www.kaggle.com/yiweilu
        aria-label: Kaggle
      - text: '<span class="nav-text resume-tab"><i class="bi bi-download"></i> Resume</span>'
        menu:
          - href: resume.qmd
            text: '<span class="nav-text"><i class="bi bi-eye"></i> View Resume</span>'
            target: _self
          - href: Resume_YL_2025_D1.pdf
            text: '<span class="nav-text"><i class="bi bi-file-earmark-arrow-down"></i> Download PDF</span>'
            target: _blank
      - href: ww.html              
        text: '<img class="w-logo" src="/images/W.PNG" alt="W Logo">' 
        aria-label: W
        icon: none
        target: _blank

format:
  html:
    theme: cosmo
    toc: true
    allow-raw-html: true
    css: styles.css
    include-in-header:
      text: |
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
        <style>
          /* Hide Quarto's built-in navbar search container (keep it in DOM for API) */
          #quarto-search {
            display: none !important;          /* hide the button */
            width: 0 !important;
            height: 0 !important;
            overflow: hidden !important;
            position: absolute !important;     /* make sure it doesn't affect layout */
            left: -9999px !important;
          }
        </style>
    include-after-body:
      text: |
        <!-- Floating, draggable search button -->
        <button id="floating-search" aria-label="Search" title="Search (âŒ˜/Ctrl + K)">
          <i class="bi bi-search"></i> Search
        </button>

        <style>
          #floating-search{
            position: fixed;
            right: 22px;
            bottom: 22px;
            width: 54px;
            height: 54px;
            border: none;
            border-radius: 50%;
            background: #0d6efd;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 10px 24px rgba(13,110,253,.35);
            cursor: grab;
            z-index: 1100;
            transition: transform .18s ease, box-shadow .18s ease, background .18s ease;
          }
          #floating-search:hover{
            transform: translateY(-2px);
            box-shadow: 0 14px 30px rgba(13,110,253,.45);
          }
          #floating-search:active{
            transform: translateY(0) scale(.96);
            cursor: grabbing;
          }
          #floating-search i{
            font-size: 1.25rem;
            line-height: 1;
          }
          @media (max-width: 480px){
            #floating-search{ right: 16px; bottom: 16px; }
          }
        </style>

        <script>
          // Open Quarto search
          function openSearch() {
            if (window.quartoOpenSearch) window.quartoOpenSearch();
          }
          document.getElementById('floating-search').addEventListener('click', openSearch);

          // Keyboard shortcut: Cmd/Ctrl + K
          document.addEventListener('keydown', (e) => {
            const k = e.key.toLowerCase();
            if ((e.metaKey || e.ctrlKey) && k === 'k') {
              openSearch();
              e.preventDefault();
            }
          });

          // Draggable logic with saved position (localStorage)
          (function () {
            const btn = document.getElementById('floating-search');
            if (!btn) return;

            // Restore saved position
            try {
              const saved = JSON.parse(localStorage.getItem('fs-pos') || '{}');
              if (saved.left != null && saved.top != null) {
                btn.style.left = saved.left + 'px';
                btn.style.top  = saved.top  + 'px';
                btn.style.right = 'auto';
                btn.style.bottom = 'auto';
              }
            } catch (e) {}

            let dragging = false, ox = 0, oy = 0;

            const onDown = (e) => {
              dragging = true;
              const rect = btn.getBoundingClientRect();
              ox = (e.touches ? e.touches[0].clientX : e.clientX) - rect.left;
              oy = (e.touches ? e.touches[0].clientY : e.clientY) - rect.top;
              e.preventDefault();
            };

            const onMove = (e) => {
              if (!dragging) return;
              const x = (e.touches ? e.touches[0].clientX : e.clientX) - ox;
              const y = (e.touches ? e.touches[0].clientY : e.clientY) - oy;
              btn.style.left = Math.max(8, Math.min(window.innerWidth - btn.offsetWidth - 8, x)) + 'px';
              btn.style.top  = Math.max(8, Math.min(window.innerHeight - btn.offsetHeight - 8, y)) + 'px';
              btn.style.right = 'auto';
              btn.style.bottom = 'auto';
            };

            const onUp = () => {
              if (!dragging) return;
              dragging = false;
              // Save position
              try {
                const left = parseInt(btn.style.left || 0, 10);
                const top  = parseInt(btn.style.top  || 0, 10);
                localStorage.setItem('fs-pos', JSON.stringify({ left, top }));
              } catch (e) {}
            };

            // Mouse + touch
            btn.addEventListener('mousedown', onDown);
            document.addEventListener('mousemove', onMove);
            document.addEventListener('mouseup', onUp);

            btn.addEventListener('touchstart', onDown, { passive: false });
            document.addEventListener('touchmove', onMove, { passive: false });
            document.addEventListener('touchend', onUp);
          })();
        </script>
